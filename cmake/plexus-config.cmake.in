@PACKAGE_INIT@

macro(import_targets type)
    if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/plexus-${type}-targets.cmake")
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "plexus ${type} libraries were requested but not found")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND OFF)
        return()
    endif()

    include("${CMAKE_CURRENT_LIST_DIR}/plexus-${type}-targets.cmake")
endmacro()

if(NOT TARGET plexus::plexus AND NOT TARGET plexus::libplexus)
    set(type "")

    if(DEFINED PLEXUS_USE_SHARED_LIB)
        if(PLEXUS_USE_SHARED_LIB)
            set(type "shared")
        else()
            set(type "static")
        endif()
    elseif(BUILD_SHARED_LIBS AND EXISTS "${CMAKE_CURRENT_LIST_DIR}/plexus-shared-targets.cmake")
        set(type "shared")
    elseif(EXISTS "${CMAKE_CURRENT_LIST_DIR}/plexus-static-targets.cmake")
        set(type "static")
    else()
        set(type "shared")
    endif()

    import_targets(${_type})
    check_required_components(plexus)

    string(TOUPPER ${CMAKE_BUILD_TYPE} _build)

    get_target_property(plexus_INCLUDE_DIRS plexus::libplexus INTERFACE_INCLUDE_DIRECTORIES)
    get_target_property(plexus_LIBRARY plexus::libplexus IMPORTED_LOCATION_${_build})
    get_target_property(plexus_BINRARY plexus::plexus IMPORTED_LOCATION_${_build})

    set(plexus_FOUND ON)

    unset(_build)
    unset(_type)
endif()
